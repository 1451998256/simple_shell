#include "shell.h"

/**
 * _myexit - exits the shell
 * @info: Structure containing potential arguments. Used to maintain
 *         constant function prototype.
 * Return: exits with a given exit status
 *         (0) if info.argv[0] != "exit"
 */
int _myexit(info_t *info)
{
	int exit_status = 0;

	if (info->argv[1]) /* If there is an exit argument */
	{
		int exit_check = _erratoi(info->argv[1]);
		if (exit_check == -1)
		{
			info->status = 2;
			print_error(info, "Illegal number: ");
			_eputs(info->argv[1]);
			_eputchar('\n');
			return (1);
		}
		exit_status = exit_check;
	}
	info->err_num = -1;
	exit(exit_status);
}

/**
 * _mycd - changes the current directory of the process
 * @info: Structure containing potential arguments. Used to maintain
 *         constant function prototype.
 * Return: Always 0
 */
int _mycd(info_t *info)
{
	char *dir, buffer[1024];

	if (!info->argv[1])
	{
		dir = _getenv(info, "HOME=");
		if (!dir)
			dir = _getenv(info, "PWD=");
	}
	else if (_strcmp(info->argv[1], "-") == 0)
	{
		dir = _getenv(info, "OLDPWD=");
		if (!dir)
		{
			_puts("cd: OLDPWD not set\n");
			return (1);
		}
		_puts(dir);
		_putchar('\n');
	}
	else
		dir = info->argv[1];

	if (chdir(dir) == -1)
	{
		print_error(info, "can't cd to ");
		_eputs(dir);
		_eputchar('\n');
		return (1);
	}
	_setenv(info, "OLDPWD", _getenv(info, "PWD="));
	_setenv(info, "PWD", getcwd(buffer, 1024));
	return (0);
}

/**
 * _myhelp - prints help message
 * @info: Structure containing potential arguments. Used to maintain
 *         constant function prototype.
 * Return: Always 0
 */
int _myhelp(info_t *info)
{
	char **arg_array = info->argv;

	_puts("Shell built-in commands:\n");
	_puts("\tcd [DIRECTORY]\n");
	_puts("\texit [STATUS]\n");
	_puts("\thelp\n");
	(void)arg_array; /* unused parameter */
	return (0);
}
